{
    "swagger": "2.0",
    "info": {
        "description": "Complete eSIM platform with QPay payment integration and RoamWiFi API",
        "title": "eSIM Platform API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/admin/analytics/products": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve product analytics data (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Analytics"
                ],
                "summary": "Get product analytics (Admin)",
                "responses": {
                    "200": {
                        "description": "Product analytics data",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductAnalyticsResponse"
                        }
                    }
                }
            }
        },
        "/admin/analytics/sales": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve sales analytics data (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Analytics"
                ],
                "summary": "Get sales analytics (Admin)",
                "responses": {
                    "200": {
                        "description": "Sales analytics data",
                        "schema": {
                            "$ref": "#/definitions/handlers.SalesAnalyticsResponse"
                        }
                    }
                }
            }
        },
        "/admin/orders": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve all orders with pagination and optional status filter (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "Admin"
                ],
                "summary": "Get all orders (Admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order status filter",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All orders with pagination",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/orders/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a specific order by its ID (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "Admin"
                ],
                "summary": "Get order by ID (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid order ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "501": {
                        "description": "Not implemented",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/orders/{id}/status": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the status of a specific order (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "Admin"
                ],
                "summary": "Update order status (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status update",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid order ID or request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "501": {
                        "description": "Not implemented",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/pricing/exchange-rate": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Manually set the USD to MNT exchange rate (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Pricing"
                ],
                "summary": "Update exchange rate (Admin)",
                "parameters": [
                    {
                        "description": "Exchange rate",
                        "name": "rate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateExchangeRateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exchange rate updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/pricing/info": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get current pricing information including exchange rates and profit margins (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Pricing"
                ],
                "summary": "Get pricing information (Admin)",
                "responses": {
                    "200": {
                        "description": "Current pricing information",
                        "schema": {
                            "$ref": "#/definitions/handlers.PricingInfo"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/pricing/update-all": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Recalculate pricing for all products and packages (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Pricing"
                ],
                "summary": "Update all product pricing (Admin)",
                "responses": {
                    "200": {
                        "description": "All pricing updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/products": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new eSIM product (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Products"
                ],
                "summary": "Create new product (Admin)",
                "parameters": [
                    {
                        "description": "Product details",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/products/sync": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Synchronize products from RoamWiFi API (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Products"
                ],
                "summary": "Sync products from RoamWiFi API (Admin)",
                "responses": {
                    "200": {
                        "description": "Products synced successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/products/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing eSIM product (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Products"
                ],
                "summary": "Update product (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product update details",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.UpdateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid product ID or input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an eSIM product (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Products"
                ],
                "summary": "Delete product (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid product ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/products/{id}/price": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Set a manual price override for a specific product (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Pricing"
                ],
                "summary": "Set product price (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product price",
                        "name": "price",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SetProductPriceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product price updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid product ID or input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/settings": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve admin settings (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Settings"
                ],
                "summary": "Get admin settings (Admin)",
                "responses": {
                    "200": {
                        "description": "Admin settings",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update admin settings (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Settings"
                ],
                "summary": "Update admin settings (Admin)",
                "parameters": [
                    {
                        "description": "Settings to update",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settings updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve all users with pagination (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Users"
                ],
                "summary": "Get all users (Admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users list with pagination",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a specific user by ID (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Users"
                ],
                "summary": "Get user by ID (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update user information (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Users"
                ],
                "summary": "Update user (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid user ID or input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "description": "Create a new order for eSIM purchase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create new eSIM order",
                "parameters": [
                    {
                        "description": "Order details",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/orders/{orderNumber}": {
            "get": {
                "description": "Retrieve order information by order number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get order by order number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Number",
                        "name": "orderNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/orders/{orderNumber}/payment": {
            "post": {
                "description": "Start payment process for an existing order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Initiate payment for order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Number",
                        "name": "orderNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment initiation response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Retrieve list of all available eSIM products with MNT pricing",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "parameters": [
                    {
                        "enum": [
                            "Asia",
                            "Europe",
                            "Africa",
                            "Americas",
                            "Oceania"
                        ],
                        "type": "string",
                        "description": "Filter by continent",
                        "name": "continent",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "true",
                            "false"
                        ],
                        "type": "string",
                        "description": "Filter by active status",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/products/continents": {
            "get": {
                "description": "Retrieve active products grouped by continent",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get products grouped by continent",
                "responses": {
                    "200": {
                        "description": "Products grouped by continent",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductsByContinentResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Retrieve a single product by its UUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid product ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/orders": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve orders for the authenticated user with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get user orders",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User orders with pagination",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/webhooks/qpay": {
            "post": {
                "description": "Process QPay webhook notifications for payment status updates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Handle QPay webhook",
                "parameters": [
                    {
                        "description": "QPay webhook data",
                        "name": "webhook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook processed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid webhook data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid webhook signature",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to process webhook",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/webhooks/roamwifi": {
            "post": {
                "description": "Process RoamWiFi webhook notifications (not implemented)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Handle RoamWiFi webhook",
                "parameters": [
                    {
                        "description": "RoamWiFi webhook data",
                        "name": "webhook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid webhook data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "501": {
                        "description": "Not implemented",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CreateOrderRequest": {
            "type": "object",
            "required": [
                "customer_email",
                "product_id"
            ],
            "properties": {
                "custom_price": {
                    "type": "number"
                },
                "customer_email": {
                    "type": "string"
                },
                "customer_phone": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.LoginResponse": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "handlers.PricingInfo": {
            "type": "object",
            "properties": {
                "current_exchange_rate": {
                    "type": "number"
                },
                "default_profit_margin": {
                    "type": "number"
                },
                "last_updated": {
                    "type": "string"
                }
            }
        },
        "handlers.ProductAnalyticsResponse": {
            "type": "object",
            "properties": {
                "active_products": {
                    "type": "integer"
                },
                "inactive_products": {
                    "type": "integer"
                },
                "top_selling_products": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "total_products": {
                    "type": "integer"
                }
            }
        },
        "handlers.ProductResponse": {
            "type": "object",
            "properties": {
                "base_price": {
                    "type": "number"
                },
                "continent": {
                    "type": "string"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "custom_price": {
                    "type": "number"
                },
                "data_limit": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "display_price": {
                    "type": "number"
                },
                "exchange_rate": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_synced_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price_mnt": {
                    "type": "number"
                },
                "profit_margin": {
                    "type": "number"
                },
                "sku_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "validity_days": {
                    "type": "integer"
                }
            }
        },
        "handlers.ProductsByContinentResponse": {
            "type": "object",
            "properties": {
                "Africa": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ProductResponse"
                    }
                },
                "Asia": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ProductResponse"
                    }
                },
                "Europe": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ProductResponse"
                    }
                },
                "Global": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ProductResponse"
                    }
                },
                "North America": {
                    "description": "matches inferred continent value",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ProductResponse"
                    }
                },
                "Oceania": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ProductResponse"
                    }
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "handlers.SalesAnalyticsResponse": {
            "type": "object",
            "properties": {
                "average_order_value": {
                    "type": "number"
                },
                "completed_orders": {
                    "type": "integer"
                },
                "failed_orders": {
                    "type": "integer"
                },
                "pending_orders": {
                    "type": "integer"
                },
                "total_orders": {
                    "type": "integer"
                },
                "total_sales": {
                    "type": "number"
                }
            }
        },
        "handlers.SetProductPriceRequest": {
            "type": "object",
            "required": [
                "price"
            ],
            "properties": {
                "price": {
                    "type": "number"
                }
            }
        },
        "handlers.UpdateExchangeRateRequest": {
            "type": "object",
            "required": [
                "rate"
            ],
            "properties": {
                "rate": {
                    "type": "number"
                }
            }
        },
        "handlers.UpdateSettingsRequest": {
            "type": "object",
            "required": [
                "settings"
            ],
            "properties": {
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "services.CreateProductRequest": {
            "type": "object",
            "required": [
                "base_price",
                "name",
                "sku_id"
            ],
            "properties": {
                "base_price": {
                    "type": "number"
                },
                "continent": {
                    "type": "string"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "custom_price": {
                    "type": "number"
                },
                "data_limit": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sku_id": {
                    "type": "string"
                },
                "validity_days": {
                    "type": "integer"
                }
            }
        },
        "services.UpdateProductRequest": {
            "type": "object",
            "properties": {
                "base_price": {
                    "type": "number"
                },
                "continent": {
                    "type": "string"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "custom_price": {
                    "type": "number"
                },
                "data_limit": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "validity_days": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}