basePath: /api/v1
definitions:
  esim-platform_internal_models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      is_admin:
        type: boolean
      last_name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
  esim-platform_internal_services.CreateProductRequest:
    properties:
      base_price:
        type: number
      continent:
        type: string
      countries:
        items:
          type: string
        type: array
      custom_price:
        type: number
      data_limit:
        type: string
      description:
        type: string
      name:
        type: string
      sku_id:
        type: string
      validity_days:
        type: integer
    required:
    - base_price
    - name
    - sku_id
    type: object
  esim-platform_internal_services.PackageInfo:
    properties:
      countries:
        type: string
      data_limit:
        type: string
      package_id:
        type: string
      package_name:
        type: string
      price:
        type: number
      validity:
        type: integer
    type: object
  esim-platform_internal_services.RoamWiFiCountryImage:
    properties:
      country_code:
        type: integer
      image_url:
        type: string
      name:
        type: string
      name_en:
        type: string
    type: object
  esim-platform_internal_services.RoamWiFiPackage:
    properties:
      api_code:
        type: string
      days:
        type: integer
      expire_days:
        type: integer
      flow_type:
        type: integer
      flows:
        type: number
      had_daypass_detail:
        type: integer
      max_day:
        type: integer
      max_discount:
        type: integer
      min_day:
        type: integer
      must_date:
        type: integer
      network:
        items:
          $ref: '#/definitions/esim-platform_internal_services.RoamWiFiPackageNetwork'
        type: array
      open_card_fee:
        type: number
      overlay:
        type: integer
      pid:
        type: integer
      premark:
        type: string
      price:
        type: number
      price_id:
        type: integer
      show_name:
        type: string
      single_discount:
        type: integer
      single_discount_day:
        type: integer
      support_daypass:
        type: integer
      unit:
        type: string
    type: object
  esim-platform_internal_services.RoamWiFiPackageNetwork:
    properties:
      namecn:
        type: string
      nameen:
        type: string
      operator:
        type: string
      type:
        type: string
    type: object
  esim-platform_internal_services.RoamWiFiPackagesResponse:
    properties:
      country_code:
        type: string
      country_images:
        items:
          $ref: '#/definitions/esim-platform_internal_services.RoamWiFiCountryImage'
        type: array
      display:
        type: string
      display_en:
        type: string
      image_url:
        type: string
      packages:
        items:
          $ref: '#/definitions/esim-platform_internal_services.RoamWiFiPackage'
        type: array
      sku_id:
        type: integer
      support_country:
        items:
          type: string
        type: array
    type: object
  esim-platform_internal_services.SKUInfo:
    properties:
      country_code:
        type: string
      display:
        type: string
      sku_id:
        type: integer
    type: object
  esim-platform_internal_services.UpdateProductRequest:
    properties:
      base_price:
        type: number
      continent:
        type: string
      countries:
        items:
          type: string
        type: array
      custom_price:
        type: number
      data_limit:
        type: string
      description:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      validity_days:
        type: integer
    type: object
  internal_handlers.CreateOrderRequest:
    properties:
      custom_price:
        type: number
      customer_email:
        type: string
      customer_phone:
        type: string
      product_id:
        type: string
      user_id:
        type: string
    required:
    - customer_email
    - product_id
    type: object
  internal_handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  internal_handlers.LoginResponse:
    properties:
      refresh_token:
        type: string
      token:
        type: string
      user:
        $ref: '#/definitions/esim-platform_internal_models.User'
    type: object
  internal_handlers.PricingInfo:
    properties:
      current_exchange_rate:
        type: number
      default_profit_margin:
        type: number
      last_updated:
        type: string
    type: object
  internal_handlers.ProductAnalyticsResponse:
    properties:
      active_products:
        type: integer
      inactive_products:
        type: integer
      top_selling_products:
        items:
          additionalProperties: true
          type: object
        type: array
      total_products:
        type: integer
    type: object
  internal_handlers.ProductResponse:
    properties:
      base_price:
        type: number
      continent:
        type: string
      countries:
        items:
          type: string
        type: array
      created_at:
        type: string
      currency:
        type: string
      custom_price:
        type: number
      data_limit:
        type: string
      description:
        type: string
      display_price:
        type: number
      exchange_rate:
        type: number
      id:
        type: string
      is_active:
        type: boolean
      last_synced_at:
        type: string
      name:
        type: string
      price_mnt:
        type: number
      profit_margin:
        type: number
      sku_id:
        type: string
      updated_at:
        type: string
      validity_days:
        type: integer
    type: object
  internal_handlers.ProductsByContinentResponse:
    properties:
      Africa:
        items:
          $ref: '#/definitions/internal_handlers.ProductResponse'
        type: array
      Asia:
        items:
          $ref: '#/definitions/internal_handlers.ProductResponse'
        type: array
      Europe:
        items:
          $ref: '#/definitions/internal_handlers.ProductResponse'
        type: array
      Global:
        items:
          $ref: '#/definitions/internal_handlers.ProductResponse'
        type: array
      North America:
        description: matches inferred continent value
        items:
          $ref: '#/definitions/internal_handlers.ProductResponse'
        type: array
      Oceania:
        items:
          $ref: '#/definitions/internal_handlers.ProductResponse'
        type: array
    type: object
  internal_handlers.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 6
        type: string
      phone:
        type: string
    required:
    - email
    - password
    type: object
  internal_handlers.SalesAnalyticsResponse:
    properties:
      average_order_value:
        type: number
      completed_orders:
        type: integer
      failed_orders:
        type: integer
      pending_orders:
        type: integer
      total_orders:
        type: integer
      total_sales:
        type: number
    type: object
  internal_handlers.SetProductPriceRequest:
    properties:
      price:
        type: number
    required:
    - price
    type: object
  internal_handlers.UpdateExchangeRateRequest:
    properties:
      rate:
        type: number
    required:
    - rate
    type: object
  internal_handlers.UpdateSettingsRequest:
    properties:
      settings:
        additionalProperties:
          type: string
        type: object
    required:
    - settings
    type: object
  internal_handlers.UpdateUserRequest:
    properties:
      first_name:
        type: string
      is_admin:
        type: boolean
      last_name:
        type: string
      phone:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Complete eSIM platform with QPay payment integration and RoamWiFi API
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: eSIM Platform API
  version: "1.0"
paths:
  /admin/analytics/products:
    get:
      description: Retrieve product analytics data (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: Product analytics data
          schema:
            $ref: '#/definitions/internal_handlers.ProductAnalyticsResponse'
      security:
      - Bearer: []
      summary: Get product analytics (Admin)
      tags:
      - Admin
      - Analytics
  /admin/analytics/sales:
    get:
      description: Retrieve sales analytics data (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: Sales analytics data
          schema:
            $ref: '#/definitions/internal_handlers.SalesAnalyticsResponse'
      security:
      - Bearer: []
      summary: Get sales analytics (Admin)
      tags:
      - Admin
      - Analytics
  /admin/orders:
    get:
      description: Retrieve all orders with pagination and optional status filter
        (admin only)
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Order status filter
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: All orders with pagination
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get all orders (Admin)
      tags:
      - Orders
      - Admin
  /admin/orders/{id}:
    get:
      description: Retrieve a specific order by its ID (admin only)
      parameters:
      - description: Order ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order information
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid order ID
          schema:
            additionalProperties: true
            type: object
        "501":
          description: Not implemented
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get order by ID (Admin)
      tags:
      - Orders
      - Admin
  /admin/orders/{id}/status:
    put:
      consumes:
      - application/json
      description: Update the status of a specific order (admin only)
      parameters:
      - description: Order ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Status update
        in: body
        name: status
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Status updated
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid order ID or request
          schema:
            additionalProperties: true
            type: object
        "501":
          description: Not implemented
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update order status (Admin)
      tags:
      - Orders
      - Admin
  /admin/pricing/exchange-rate:
    put:
      consumes:
      - application/json
      description: Manually set the USD to MNT exchange rate (admin only)
      parameters:
      - description: Exchange rate
        in: body
        name: rate
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.UpdateExchangeRateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Exchange rate updated
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update exchange rate (Admin)
      tags:
      - Admin
      - Pricing
  /admin/pricing/info:
    get:
      description: Get current pricing information including exchange rates and profit
        margins (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: Current pricing information
          schema:
            $ref: '#/definitions/internal_handlers.PricingInfo'
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get pricing information (Admin)
      tags:
      - Admin
      - Pricing
  /admin/pricing/update-all:
    post:
      description: Recalculate pricing for all products and packages (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: All pricing updated
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update all product pricing (Admin)
      tags:
      - Admin
      - Pricing
  /admin/products:
    post:
      consumes:
      - application/json
      description: Create a new eSIM product (admin only)
      parameters:
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/esim-platform_internal_services.CreateProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Product created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Create new product (Admin)
      tags:
      - Admin
      - Products
  /admin/products/{id}:
    delete:
      description: Delete an eSIM product (admin only)
      parameters:
      - description: Product ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Product deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid product ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Delete product (Admin)
      tags:
      - Admin
      - Products
    put:
      consumes:
      - application/json
      description: Update an existing eSIM product (admin only)
      parameters:
      - description: Product ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Product update details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/esim-platform_internal_services.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Product updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid product ID or input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update product (Admin)
      tags:
      - Admin
      - Products
  /admin/products/{id}/price:
    put:
      consumes:
      - application/json
      description: Set a manual price override for a specific product (admin only)
      parameters:
      - description: Product ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Product price
        in: body
        name: price
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.SetProductPriceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Product price updated
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid product ID or input
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Set product price (Admin)
      tags:
      - Admin
      - Pricing
  /admin/products/sync:
    post:
      description: Synchronize products from RoamWiFi API (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: Products synced successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Sync products from RoamWiFi API (Admin)
      tags:
      - Admin
      - Products
  /admin/settings:
    get:
      description: Retrieve admin settings (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: Admin settings
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get admin settings (Admin)
      tags:
      - Admin
      - Settings
    put:
      consumes:
      - application/json
      description: Update admin settings (admin only)
      parameters:
      - description: Settings to update
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.UpdateSettingsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Settings updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update admin settings (Admin)
      tags:
      - Admin
      - Settings
  /admin/users:
    get:
      description: Retrieve all users with pagination (admin only)
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Users list with pagination
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get all users (Admin)
      tags:
      - Admin
      - Users
  /admin/users/{id}:
    get:
      description: Retrieve a specific user by ID (admin only)
      parameters:
      - description: User ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User information
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get user by ID (Admin)
      tags:
      - Admin
      - Users
    put:
      consumes:
      - application/json
      description: Update user information (admin only)
      parameters:
      - description: User ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: User update details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID or input
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update user (Admin)
      tags:
      - Admin
      - Users
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/internal_handlers.LoginResponse'
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/internal_handlers.LoginResponse'
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "409":
          description: User already exists
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - Authentication
  /orders:
    post:
      consumes:
      - application/json
      description: Create a new order for eSIM purchase
      parameters:
      - description: Order details
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Order created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create new eSIM order
      tags:
      - Orders
  /orders/{orderNumber}:
    get:
      description: Retrieve order information by order number
      parameters:
      - description: Order Number
        in: path
        name: orderNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order information
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Order not found
          schema:
            additionalProperties: true
            type: object
      summary: Get order by order number
      tags:
      - Orders
  /orders/{orderNumber}/payment:
    post:
      description: Start payment process for an existing order
      parameters:
      - description: Order Number
        in: path
        name: orderNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Payment initiation response
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Initiate payment for order
      tags:
      - Orders
  /products:
    get:
      description: Retrieve list of all available eSIM products with MNT pricing
      parameters:
      - description: Filter by continent
        enum:
        - Asia
        - Europe
        - Africa
        - Americas
        - Oceania
        in: query
        name: continent
        type: string
      - description: Filter by active status
        enum:
        - "true"
        - "false"
        in: query
        name: active
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Number of items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of products
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all products
      tags:
      - Products
  /products/{id}:
    get:
      description: Retrieve a single product by its UUID
      parameters:
      - description: Product ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Product details
          schema:
            $ref: '#/definitions/internal_handlers.ProductResponse'
        "400":
          description: Invalid product ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Product not found
          schema:
            additionalProperties: true
            type: object
      summary: Get product by ID
      tags:
      - Products
  /products/continents:
    get:
      description: Retrieve active products grouped by continent
      produces:
      - application/json
      responses:
        "200":
          description: Products grouped by continent
          schema:
            $ref: '#/definitions/internal_handlers.ProductsByContinentResponse'
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get products grouped by continent
      tags:
      - Products
  /products/sku/{skuId}:
    get:
      description: 'Public: Retrieve metadata for a specific SKU'
      parameters:
      - description: SKU ID
        in: path
        name: skuId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: SKU details
          schema:
            $ref: '#/definitions/esim-platform_internal_services.SKUInfo'
        "404":
          description: SKU not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to retrieve SKU
          schema:
            additionalProperties: true
            type: object
      summary: Get single SKU info
      tags:
      - Products
  /products/sku/{skuId}/packages:
    get:
      description: Retrieve available data packages (plans) for a specific product
        SKU (day passes, data/validity variants)
      parameters:
      - description: SKU ID
        in: path
        name: skuId
        required: true
        type: string
      - description: If true returns detailed provider package structure
        in: query
        name: detailed
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Detailed packages when detailed=true
          schema:
            $ref: '#/definitions/esim-platform_internal_services.RoamWiFiPackagesResponse'
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get packages for a SKU
      tags:
      - Products
  /products/skus:
    get:
      description: 'Public: Retrieve the raw list of available eSIM SKUs from provider
        (for client SKU selection)'
      produces:
      - application/json
      responses:
        "200":
          description: List of SKUs
          schema:
            items:
              $ref: '#/definitions/esim-platform_internal_services.SKUInfo'
            type: array
        "500":
          description: Failed to retrieve SKUs
          schema:
            additionalProperties: true
            type: object
      summary: Get available SKUs
      tags:
      - Products
  /user/orders:
    get:
      description: Retrieve orders for the authenticated user with pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User orders with pagination
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication required
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get user orders
      tags:
      - Orders
  /webhooks/qpay:
    post:
      consumes:
      - application/json
      description: Process QPay webhook notifications for payment status updates
      parameters:
      - description: QPay webhook data
        in: body
        name: webhook
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Webhook processed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid webhook data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid webhook signature
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to process webhook
          schema:
            additionalProperties: true
            type: object
      summary: Handle QPay webhook
      tags:
      - Webhooks
  /webhooks/roamwifi:
    post:
      consumes:
      - application/json
      description: Process RoamWiFi webhook notifications (not implemented)
      parameters:
      - description: RoamWiFi webhook data
        in: body
        name: webhook
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "400":
          description: Invalid webhook data
          schema:
            additionalProperties: true
            type: object
        "501":
          description: Not implemented
          schema:
            additionalProperties: true
            type: object
      summary: Handle RoamWiFi webhook
      tags:
      - Webhooks
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
